name: Continuous Deployment

on:
  pull_request:
    branches: ["main"]

concurrency:
  group: master
  cancel-in-progress: true   # cancel other workflows from merging to main branch (contradict workflow)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  continuous-integration:
    name: Continuous Integration
    uses: ./.github/workflows/CI.yml

  deploy:
    name: Deploy
    needs: continuous-integration
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github
          chmod 600 ~/.ssh/github
          cat >>~/.ssh/config <<END
          Host target
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/github
            LogLevel ERROR
            StrictHostKeyChecking no
          END

      - name: Run deploy
        run: |
          ssh target "cd django-rest-api/ && docker-compose down && git pull && make prod-docker"

      # - name: Checkout repository
      #   uses: actions/checkout@v3

      # - name: Log in to the Container registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

    # - name: Pull image from GitHub Packages
    # 	uses: docker/login-action@v1
    # 	with:
    # 		registry: docker.pkg.github.com
    # 		username: ${{ secrets.GITHUB_USERNAME }}
    # 		password: ${{ secrets.GITHUB_TOKEN }}

    # - uses: docker/pull-action@v1
    # 	with:
    # 		images: docker.pkg.github.com/${{ github.repository }}/docker_image_gotk3:${{ github.sha }}
    # 		tag_with_sha: false
    # 		tag_with_ref: false
    # 		add_git_labels: false
    # 		tag_with_version: false
    # 		tag_as_latest: false
    # 		tag_with_name: ${{ secrets.HEROKU_APP_NAME }}
