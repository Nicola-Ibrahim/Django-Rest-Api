version: "3.9"

services:
  db:
    image: postgres:15.3-alpine
    container_name: db_container
    restart: unless-stopped

    environment:
      POSTGRES_DB: dauth
      POSTGRES_USER: dauth
      POSTGRES_PASSWORD: dauth

    volumes:
      - postgresql-data:/var/lib/postgresql/data

    # Add a healthcheck option
    healthcheck:
      # Use pg_isready to check if the database is accepting connections
      test: pg_isready -U dauth -d dauth || exit 1
      # Run the healthcheck every 10 seconds
      interval: 10s
      # Wait for 5 seconds before the first healthcheck
      start_period: 5s
      # Fail the healthcheck after 3 retries
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:7.3
    container_name: pgadmin_container

    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin

    ports:
      - 9001:80

    depends_on:
      - db

  backend:
    container_name: backend_container

    restart: unless-stopped

    build:
      context: .
      dockerfile: ./Dockerfile

    expose:
      - 8000

    environment:
      - DAUTH_SETTINGS_DJANGO_ENV=development
      - DAUTH_SETTINGS_DATABASES={"default":{"HOST":"db"}}

    env_file:
      - ./.envs/.env

    volumes:
      - static_data:/backend/src/staticfiles
      - media_data:/backend/media
      - ./src/:/backend/src

    depends_on:
      - db

    healthcheck:
      # Use curl to ping the /admin endpoint of your backend service
      test: curl --fail http://localhost:8000/admin || exit 1
      # Run the healthcheck every 10 seconds
      interval: 10s
      # Wait for 5 seconds before the first healthcheck
      start_period: 5s
      # Fail the healthcheck after 3 retries
      retries: 3

  nginx:
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    container_name: nginx_container
    restart: unless-stopped

    volumes:
      - static_data:/backend/src/staticfiles
      - media_data:/backend/media

    ports:
      - 80:80

    depends_on:
      - backend

volumes:
  postgresql-data:
  static_data:
  media_data:
