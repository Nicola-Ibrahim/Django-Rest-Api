[tool.poetry]
name = "django-rest-api"
version = "0.1.0"
description = ""
authors = ["Nicola Ibrahim <nicolaibrahim969@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "dj_rest_api"}]

[tool.poetry.dependencies]
python = "^3.12.1"
django = "^4.1.6"
djangorestframework = "^3.14.0"
psycopg2 = "^2.9.5"
django-filter = "^22.1"
python-dotenv = "^0.21.1"
djangorestframework-jwt = "^1.11.0"
djangorestframework-simplejwt = "^5.2.2"
pillow = "^9.4.0"
cors = "^1.0.1"
pip = "^23.0"
install = "^1.3.5"
django-cors-headers = "^3.13.0"
django-split-settings = "^1.2.0"
gunicorn = "^21.1.0"
pyyaml = "^6.0.1"
celery = "^5.3.6"
django-debug-toolbar = "^4.2.0"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
pre-commit = "^3.0.4"
flake8 = "^6.0.0"
isort = "^5.12.0"
yapf = "^0.32.0"
django-extensions = "^3.2.1"
colorlog = "^6.7.0"
pylint-django = "^2.5.3"
sphinx = "^7.2.6"
drf-yasg = "^1.21.7"


[tool.poetry.group.test.dependencies]
pytest-xdist = "^3.3.1"
model-bakery = "^1.12.0"
pytest-django = "^4.5.2"
pytest-factory = "^0.0.1.dev0"
pytest-factoryboy = "^2.5.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
hypothesis = "^6.81.1"

# ==== black ====
[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 5
skip = [".venv/", "venv/"]
skip_glob = ["**/migrations/*.py"]

# ==== yapf ====
[tool.yapf]
based_on_style = "google"
align_closing_bracket_with_visual_indent = true
coalesce_brackets = true
column_limit = 119
dedent_closing_brackets = true

# ==== pytest ====
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
django_find_project = true
python_files = "test_*.py"
testpaths = ["dj_rest_api"]
pythonpath = ["." ,"dj_rest_api"]
filterwarnings = "ignore::DeprecationWarning:^(?!node\\.).*:"
# addopts = "-vv -x --lf --cov"

# ==== Coverage ====
[tool.coverage.run]
include = ["authen/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = [
    "pylint_django",
]

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
